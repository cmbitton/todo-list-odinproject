(()=>{"use strict";class t{content=document.querySelector("#content");mainContentContainer=document.querySelector(".main-content-container");todoscontainer=document.querySelector(".todos-container");constructor(){}loadTodos(t){let e=0;this.todoscontainer.innerHTML="";for(const n of t){const t=document.createElement("div");t.classList.add("todo-container"),t.setAttribute("data-todo-index",e),!0===n.complete&&t.classList.add("completed"),e++;const d=document.createElement("h2");d.classList.add("todo-title"),d.textContent=n.title;const c=document.createElement("p");c.classList.add("todo-description"),c.textContent=n.description;const s=document.createElement("p");s.classList.add("todo-date"),s.innerHTML=`<span class="due-date-label">Due Date: </span> ${n.dueDate.slice(5,7)}/${n.dueDate.slice(8,11)}/${n.dueDate.slice(0,4)}`;const a=document.createElement("p");a.classList.add("todo-time"),""!==n.time?a.innerHTML='<span class="due-time-label">Time Due: </span>'+(0==+(o=n.time).slice(0,2)?`${+o.slice(0,2)+12}:${o.slice(3,5)} AM`:+o.slice(0,2)<12?o+" AM":12==+o.slice(0,2)?`${o.slice(0,2)}:${o.slice(3,5)} PM`:`${+o.slice(0,2)-12}:${o.slice(3,5)} PM`):a.innerHTML='<span class="due-time-label">Time Due: </span> No Time Set';const i=document.createElement("button");i.setAttribute("type","button"),i.classList.add("complete-button"),!0===n.complete&&i.classList.add("completed"),!1===n.complete?i.textContent="Not Completed":i.textContent="Completed";const l=document.createElement("div");l.classList.add("todo-options"),l.innerHTML='<span class="material-symbols-outlined todo-options-icon">more_vert</span>';const r=document.createElement("div"),m=document.createElement("div");m.textContent="Remove",m.classList.add("remove-todo"),r.classList.add("todo-options-container","hidden"),r.append(m),l.append(r),t.append(d,c,s,a,i,l),this.todoscontainer.append(t)}var o}addCompletionButtonEvent(t){const e=document.querySelectorAll(".complete-button");for(const o of e)o.addEventListener("click",(e=>{o.classList.contains("completed")?(o.classList.remove("completed"),o.textContent="Not Completed",e.target.parentNode.classList.remove("completed"),t[e.target.parentNode.getAttribute("data-todo-index")].complete=!1):(o.classList.add("completed"),e.target.parentNode.classList.add("completed"),o.textContent="Completed",t[e.target.parentNode.getAttribute("data-todo-index")].complete=!0)}))}showTodoOptions(){const t=document.querySelectorAll(".todo-options-icon");for(const e of t)e.addEventListener("click",(t=>{const e=t.target.parentNode;console.log(e);const o=e.querySelector(".todo-options-container");o.classList.contains("hidden")?o.classList.remove("hidden"):o.classList.add("hidden")}))}}class e{constructor(t,e,o,n,d){this.title=t,this.description=e,this.dueDate=o,this.time=n,this.complete=d}}const o=new class{content=document.querySelector("#content");nav=document.querySelector(".navbar");constructor(){this.mainContent=new t}dimBackground(){this.nav.style.filter="brightness(50%)",this.mainContent.mainContentContainer.style.filter="brightness(50%)"}unDimBackground(){this.nav.removeAttribute("style"),this.mainContent.mainContentContainer.removeAttribute("style")}},n=new class{content=document.querySelector("#content");modalContainer=document.querySelector(".new-todo-container");constructor(){}toggleModalVisibility(){this.modalContainer.classList.toggle("hidden")}openModal(t){t.stopPropagation(),this.toggleModalVisibility()}closeModal(t){let e=t.target,o=!0;if(!t.target.classList.contains("submit-todo-button"))for(;e&&"BODY"!==e.nodeName;){if(e.classList.contains("new-todo-container")){o=!1;break}e=e.parentNode}return o&&!this.modalContainer.classList.contains("hidden")&&this.modalContainer.classList.toggle("hidden"),o}loadModalContent(){const t=document.querySelector("#tododate"),e=function(){const t=new Date,e=t.getFullYear(),o=t.getDate();let n=t.getMonth()+1;return n.toString.length<2&&(n="0"+n),{year:e,month:n,day:o}}();t.setAttribute({min:`${e.year}-${e.month}-${e.day}`,required:!0})}clearModalContent(){document.querySelector("#todoname").value="",document.querySelector("#tododescription").value="",document.querySelector("#tododate").value="",document.querySelector("#todotime").value=""}},d=[],c=document.querySelector(".new-todo-container"),s=document.querySelector(".add-todo-button"),a=document.querySelector(".submit-todo-button");function i(){const t=document.querySelectorAll(".remove-todo");for(const e of t)e.addEventListener("click",(t=>{const e=+t.target.parentNode.parentNode.parentNode.getAttribute("data-todo-index");d.splice(e,1),o.mainContent.loadTodos(d),r(),l(d),i()}))}function l(t){const e=document.querySelectorAll(".complete-button");for(const o of e)o.addEventListener("click",(e=>{o.classList.contains("completed")?(o.classList.remove("completed"),o.textContent="Not Completed",e.target.parentNode.classList.remove("completed"),t[e.target.parentNode.getAttribute("data-todo-index")].complete=!1):(o.classList.add("completed"),e.target.parentNode.classList.add("completed"),o.textContent="Completed",t[e.target.parentNode.getAttribute("data-todo-index")].complete=!0)}))}function r(){const t=document.querySelectorAll(".todo-options-icon");for(const e of t)e.addEventListener("click",(t=>{const e=t.target.parentNode.querySelector(".todo-options-container");e.classList.contains("hidden")?e.classList.remove("hidden"):e.classList.add("hidden")}))}s.addEventListener("click",(t=>{c.classList.contains("hidden")&&(n.openModal(t),n.clearModalContent(),o.dimBackground())})),window.addEventListener("click",(t=>{n.closeModal(t)&&o.unDimBackground()})),a.addEventListener("click",(t=>{if(document.querySelector("form").checkValidity()){t.preventDefault();const c=document.querySelector("#todoname").value,s=document.querySelector("#tododescription").value,a=document.querySelector("#tododate").value,m=document.querySelector("#todotime").value,u=new e(c,s,a,m,!1);d.push(u),console.log(d),o.mainContent.loadTodos(d),n.closeModal(t),r(),l(d),i(),o.dimBackground()}else document.querySelector("form").reportValidity(),t.stopPropagation()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,