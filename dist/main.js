(()=>{"use strict";class e{content=document.querySelector("#content");mainContentContainer=document.querySelector(".main-content-container");todoscontainer=document.querySelector(".todos-container");constructor(){}loadTodos(e){let o=0;this.todoscontainer.innerHTML="";for(const n of e){const e=document.createElement("div");e.classList.add("todo-container"),e.setAttribute("data-todo-index",o),!0===n.complete&&e.classList.add("completed"),o++;const c=document.createElement("h2");c.classList.add("todo-title"),c.textContent=n.title;const s=document.createElement("p");s.classList.add("todo-description"),s.textContent=n.description;const d=document.createElement("p");d.classList.add("todo-date"),d.innerHTML=`<span class="due-date-label">Due Date: </span> ${n.dueDate.slice(5,7)}/${n.dueDate.slice(8,11)}/${n.dueDate.slice(0,4)}`;const a=document.createElement("p");a.classList.add("todo-time"),""!==n.time?a.innerHTML=`<span class="due-time-label">Time Due: </span>${t(n.time)}`:a.innerHTML='<span class="due-time-label">Time Due: </span> No Time Set';const i=document.createElement("p");i.classList.add("todo-project-name"),i.innerHTML=`<span class="due-date-label">Project Name: </span> ${n.projectName}`;const l=document.createElement("button");l.setAttribute("type","button"),l.classList.add("complete-button"),!0===n.complete&&l.classList.add("completed"),!1===n.complete?l.textContent="Not Completed":l.textContent="Completed";const r=document.createElement("div");r.classList.add("todo-options"),r.innerHTML='<span class="material-symbols-outlined todo-options-icon">more_vert</span>';const u=document.createElement("div"),m=document.createElement("div");m.textContent="Remove",m.classList.add("remove-todo"),u.classList.add("todo-options-container","hidden"),u.append(m),r.append(u),e.append(c,s,d,a,i,l,r),this.todoscontainer.append(e)}}addCompletionButtonEvent(e){const t=document.querySelectorAll(".complete-button");for(const o of t)o.addEventListener("click",(t=>{o.classList.contains("completed")?(o.classList.remove("completed"),o.textContent="Not Completed",t.target.parentNode.classList.remove("completed"),e[t.target.parentNode.getAttribute("data-todo-index")].complete=!1):(o.classList.add("completed"),t.target.parentNode.classList.add("completed"),o.textContent="Completed",e[t.target.parentNode.getAttribute("data-todo-index")].complete=!0)}))}showTodoOptions(){const e=document.querySelectorAll(".todo-options-icon");for(const t of e)t.addEventListener("click",(e=>{const t=e.target.parentNode;console.log(t);const o=t.querySelector(".todo-options-container");o.classList.contains("hidden")?o.classList.remove("hidden"):o.classList.add("hidden")}))}}function t(e){return 0==+e.slice(0,2)?`${+e.slice(0,2)+12}:${e.slice(3,5)} AM`:+e.slice(0,2)<12?e+" AM":12==+e.slice(0,2)?`${e.slice(0,2)}:${e.slice(3,5)} PM`:`${+e.slice(0,2)-12}:${e.slice(3,5)} PM`}class o{constructor(e,t,o,n,c,s){this.title=e,this.description=t,this.dueDate=o,this.time=n,this.complete=c,this.projectName=s}}const n=new class{content=document.querySelector("#content");nav=document.querySelector(".navbar");constructor(){this.mainContent=new e}dimBackground(){this.nav.style.filter="brightness(50%)",this.mainContent.mainContentContainer.style.filter="brightness(50%)"}unDimBackground(){this.nav.removeAttribute("style"),this.mainContent.mainContentContainer.removeAttribute("style")}},c=new class{content=document.querySelector("#content");modalContainer=document.querySelector(".new-todo-container");constructor(){}toggleModalVisibility(){this.modalContainer.classList.toggle("hidden")}openModal(e,t){e.stopPropagation(),this.toggleModalVisibility(),this.updateProjectsSelection(t)}closeModal(e){let t=e.target,o=!0;if(!e.target.classList.contains("submit-todo-button"))for(;t&&"BODY"!==t.nodeName;){if(t.classList.contains("new-todo-container")){o=!1;break}t=t.parentNode}return o&&!this.modalContainer.classList.contains("hidden")&&this.modalContainer.classList.toggle("hidden"),o}loadModalContent(){const e=document.querySelector("#tododate"),t=function(){const e=new Date,t=e.getFullYear(),o=e.getDate();let n=e.getMonth()+1;return n.toString.length<2&&(n="0"+n),{year:t,month:n,day:o}}();e.setAttribute({min:`${t.year}-${t.month}-${t.day}`,required:!0})}clearModalContent(){document.querySelector("#todoname").value="",document.querySelector("#tododescription").value="",document.querySelector("#tododate").value="",document.querySelector("#todotime").value="",document.querySelector("#project-name").value=""}updateProjectsSelection(e){const t=document.querySelector("#project-selection");console.log(t);for(const o of e)if(null===document.getElementById(o)){const e=document.createElement("option");e.value=o,e.textContent=o,e.id=o,t.append(e)}}},s=new class{content=document.querySelector("#content");mainContainer=document.querySelector(".main-content-container");todosContainer=document.querySelector(".todos-container");projectTitle=document.createElement("h1");projectsList=[];constructor(){this.projects=[]}loadTitle(){this.projectTitle.classList.add("project-title"),this.projectTitle.textContent="Projects",this.mainContainer.insertAdjacentElement("afterbegin",this.projectTitle)}loadProjectContainers(){for(const e of this.projectsList){const t=document.createElement("div"),o=document.createElement("h2");t.classList.add("project-container"),t.setAttribute("data-project-name",e),o.textContent=e,t.append(o),this.todosContainer.append(t)}}loadTodosForProject(e){let o=0;for(const n of e){const e=document.createElement("div");e.classList.add("todo-container"),e.setAttribute("data-todo-index",o),!0===n.complete&&e.classList.add("completed"),o++;const c=document.createElement("h2");c.classList.add("todo-title"),c.textContent=n.title;const s=document.createElement("p");s.classList.add("todo-description"),s.textContent=n.description;const d=document.createElement("p");d.classList.add("todo-date"),d.innerHTML=`<span class="due-date-label">Due Date: </span> ${n.dueDate.slice(5,7)}/${n.dueDate.slice(8,11)}/${n.dueDate.slice(0,4)}`;const a=document.createElement("p");a.classList.add("todo-time"),""!==n.time?a.innerHTML=`<span class="due-time-label">Time Due: </span>${t(n.time)}`:a.innerHTML='<span class="due-time-label">Time Due: </span> No Time Set';const i=document.createElement("button");i.setAttribute("type","button"),i.classList.add("complete-button"),!0===n.complete&&i.classList.add("completed"),!1===n.complete?i.textContent="Not Completed":i.textContent="Completed";const l=document.createElement("div");l.classList.add("todo-options"),l.innerHTML='<span class="material-symbols-outlined todo-options-icon">more_vert</span>';const r=document.createElement("div"),u=document.createElement("div");u.textContent="Remove",u.classList.add("remove-todo"),r.classList.add("todo-options-container","hidden"),r.append(u),l.append(r),e.append(c,s,d,a,i,l),this.addTodosToProjectContainers(n.projectName,e)}}addTodosToProjectContainers(e,t){const o=document.querySelectorAll(".project-container");for(const n of o)e===n.getAttribute("data-project-name")&&n.append(t)}},d=[],a=document.querySelector(".todos-container"),i=document.querySelector(".new-todo-container"),l=document.querySelector(".add-todo-button"),r=document.querySelector(".submit-todo-button"),u=document.querySelector(".projects"),m=document.querySelector("#project-selection"),p=document.querySelector(".home");function L(){const e=document.querySelector(".project-name-container"),t=document.querySelector("#project-name");"New Project"===m.value?(e.classList.contains("hidden")&&e.classList.remove("hidden"),t.value=""):e.classList.contains("hidden")||e.classList.add("hidden")}function y(){const e=document.querySelectorAll(".remove-todo");for(const t of e)t.addEventListener("click",(e=>{const t=+e.target.parentNode.parentNode.parentNode.getAttribute("data-todo-index");d.splice(t,1),p.classList.contains("button-selected")?(n.mainContent.loadTodos(d),C(),h(d),y()):(document.querySelector(".todos-container").innerHTML="",v())}))}function v(){const e=d.filter((e=>"None"!==e.projectName));s.loadProjectContainers(),s.loadTodosForProject(e),h(e),C(),y();const t=document.querySelectorAll(".project-container");for(const e of t)1===e.childElementCount&&e.remove()}function h(e){const t=document.querySelectorAll(".complete-button");for(const o of t)o.addEventListener("click",(t=>{o.classList.contains("completed")?(o.classList.remove("completed"),o.textContent="Not Completed",t.target.parentNode.classList.remove("completed"),e[t.target.parentNode.getAttribute("data-todo-index")].complete=!1):(o.classList.add("completed"),t.target.parentNode.classList.add("completed"),o.textContent="Completed",e[t.target.parentNode.getAttribute("data-todo-index")].complete=!0)}))}function C(){const e=document.querySelectorAll(".todo-options-icon");for(const t of e)t.addEventListener("click",(e=>{const t=e.target.parentNode.querySelector(".todo-options-container");t.classList.contains("hidden")?t.classList.remove("hidden"):t.classList.add("hidden")}))}l.addEventListener("click",(e=>{i.classList.contains("hidden")&&(c.openModal(e,s.projectsList),c.clearModalContent(),n.dimBackground(),m.value="none",L())})),window.addEventListener("click",(e=>{c.closeModal(e)&&n.unDimBackground()})),p.addEventListener("click",(()=>{n.mainContent.loadTodos(d),u.classList.remove("button-selected"),p.classList.add("button-selected"),C(),h(d),y(),null!==document.querySelector(".project-title")&&document.querySelector(".project-title").remove()})),u.addEventListener("click",(()=>{a.innerHTML="",p.classList.remove("button-selected"),u.classList.add("button-selected"),s.loadTitle(),v()})),m.addEventListener("change",(()=>{L()})),r.addEventListener("click",(e=>{if(document.querySelector("form").checkValidity()){e.preventDefault();const t=document.querySelector("#todoname").value,a=document.querySelector("#tododescription").value,i=document.querySelector("#tododate").value,l=document.querySelector("#todotime").value;let r=document.querySelector("#project-name").value;const u=document.querySelector("#project-selection");""===r&&"none"===u.value?r="None":""===r&&"none"!==u.value&&(r=u.value);const m=new o(t,a,i,l,!1,r);d.push(m),s.projectsList.includes(r)||"None"===r||s.projectsList.push(r),console.log(d),c.closeModal(e),n.dimBackground(),p.classList.contains("button-selected")?(n.mainContent.loadTodos(d),C(),h(d),y()):(document.querySelector(".todos-container").innerHTML="",v())}else document.querySelector("form").reportValidity(),e.stopPropagation()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,