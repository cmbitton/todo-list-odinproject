(()=>{"use strict";class e{content=document.querySelector("#content");mainContentContainer=document.querySelector(".main-content-container");todoscontainer=document.querySelector(".todos-container");constructor(){}loadTodos(e){let t=0;this.todoscontainer.innerHTML="";for(const n of e){const e=document.createElement("div");e.classList.add("todo-container"),e.setAttribute("data-todo-index",t),!0===n.complete&&e.classList.add("completed"),t++;const c=document.createElement("h2");c.classList.add("todo-title"),c.textContent=n.title;const s=document.createElement("p");s.classList.add("todo-description"),s.textContent=n.description;const d=document.createElement("p");d.classList.add("todo-date"),d.innerHTML=`<span class="due-date-label">Due Date: </span> ${n.dueDate.slice(5,7)}/${n.dueDate.slice(8,11)}/${n.dueDate.slice(0,4)}`;const a=document.createElement("p");a.classList.add("todo-time"),""!==n.time?a.innerHTML='<span class="due-time-label">Time Due: </span>'+(0==+(o=n.time).slice(0,2)?`${+o.slice(0,2)+12}:${o.slice(3,5)} AM`:+o.slice(0,2)<12?o+" AM":12==+o.slice(0,2)?`${o.slice(0,2)}:${o.slice(3,5)} PM`:`${+o.slice(0,2)-12}:${o.slice(3,5)} PM`):a.innerHTML='<span class="due-time-label">Time Due: </span> No Time Set';const i=document.createElement("p");i.classList.add("todo-project-name"),i.innerHTML=`<span class="due-date-label">Project Name: </span> ${n.projectName}`;const r=document.createElement("button");r.setAttribute("type","button"),r.classList.add("complete-button"),!0===n.complete&&r.classList.add("completed"),!1===n.complete?r.textContent="Not Completed":r.textContent="Completed";const l=document.createElement("div");l.classList.add("todo-options"),l.innerHTML='<span class="material-symbols-outlined todo-options-icon">more_vert</span>';const m=document.createElement("div"),u=document.createElement("div");u.textContent="Remove",u.classList.add("remove-todo"),m.classList.add("todo-options-container","hidden"),m.append(u),l.append(m),e.append(c,s,d,a,i,r,l),this.todoscontainer.append(e)}var o}addCompletionButtonEvent(e){const t=document.querySelectorAll(".complete-button");for(const o of t)o.addEventListener("click",(t=>{o.classList.contains("completed")?(o.classList.remove("completed"),o.textContent="Not Completed",t.target.parentNode.classList.remove("completed"),e[t.target.parentNode.getAttribute("data-todo-index")].complete=!1):(o.classList.add("completed"),t.target.parentNode.classList.add("completed"),o.textContent="Completed",e[t.target.parentNode.getAttribute("data-todo-index")].complete=!0)}))}showTodoOptions(){const e=document.querySelectorAll(".todo-options-icon");for(const t of e)t.addEventListener("click",(e=>{const t=e.target.parentNode;console.log(t);const o=t.querySelector(".todo-options-container");o.classList.contains("hidden")?o.classList.remove("hidden"):o.classList.add("hidden")}))}}class t{constructor(e,t,o,n,c,s){this.title=e,this.description=t,this.dueDate=o,this.time=n,this.complete=c,this.projectName=s}}const o=new class{content=document.querySelector("#content");nav=document.querySelector(".navbar");constructor(){this.mainContent=new e}dimBackground(){this.nav.style.filter="brightness(50%)",this.mainContent.mainContentContainer.style.filter="brightness(50%)"}unDimBackground(){this.nav.removeAttribute("style"),this.mainContent.mainContentContainer.removeAttribute("style")}},n=new class{content=document.querySelector("#content");modalContainer=document.querySelector(".new-todo-container");constructor(){}toggleModalVisibility(){this.modalContainer.classList.toggle("hidden")}openModal(e){e.stopPropagation(),this.toggleModalVisibility()}closeModal(e){let t=e.target,o=!0;if(!e.target.classList.contains("submit-todo-button"))for(;t&&"BODY"!==t.nodeName;){if(t.classList.contains("new-todo-container")){o=!1;break}t=t.parentNode}return o&&!this.modalContainer.classList.contains("hidden")&&this.modalContainer.classList.toggle("hidden"),o}loadModalContent(){const e=document.querySelector("#tododate"),t=function(){const e=new Date,t=e.getFullYear(),o=e.getDate();let n=e.getMonth()+1;return n.toString.length<2&&(n="0"+n),{year:t,month:n,day:o}}();e.setAttribute({min:`${t.year}-${t.month}-${t.day}`,required:!0})}clearModalContent(){document.querySelector("#todoname").value="",document.querySelector("#tododescription").value="",document.querySelector("#tododate").value="",document.querySelector("#todotime").value="",document.querySelector("#project-name").value=""}},c=new class{content=document.querySelector("#content");mainContainer=document.querySelector(".main-content-container");todosContainer=document.querySelector(".todos-container");projectTitle=document.createElement("h1");projectsList=[];constructor(){this.projects=[]}loadTitle(){this.projectTitle.classList.add("project-title"),this.projectTitle.textContent="Projects",this.mainContainer.insertAdjacentElement("afterbegin",this.projectTitle)}loadProjectContainers(){for(const e of this.projectsList){const t=document.createElement("div"),o=document.createElement("h2");t.classList.add("project-container"),t.setAttribute("data-project-name",e),o.textContent=e,t.append(o),this.todosContainer.append(t)}}loadTodosForProject(e){let t=0;for(const o of e){const e=document.createElement("div");e.classList.add("todo-container"),e.setAttribute("data-todo-index",t),!0===o.complete&&e.classList.add("completed"),t++;const n=document.createElement("h2");n.classList.add("todo-title"),n.textContent=o.title;const c=document.createElement("p");c.classList.add("todo-description"),c.textContent=o.description;const s=document.createElement("p");s.classList.add("todo-date"),s.innerHTML=`<span class="due-date-label">Due Date: </span> ${o.dueDate.slice(5,7)}/${o.dueDate.slice(8,11)}/${o.dueDate.slice(0,4)}`;const d=document.createElement("p");d.classList.add("todo-time"),""!==o.time?d.innerHTML=`<span class="due-time-label">Time Due: </span>${formatTime(o.time)}`:d.innerHTML='<span class="due-time-label">Time Due: </span> No Time Set';const a=document.createElement("button");a.setAttribute("type","button"),a.classList.add("complete-button"),!0===o.complete&&a.classList.add("completed"),!1===o.complete?a.textContent="Not Completed":a.textContent="Completed";const i=document.createElement("div");i.classList.add("todo-options"),i.innerHTML='<span class="material-symbols-outlined todo-options-icon">more_vert</span>';const r=document.createElement("div"),l=document.createElement("div");l.textContent="Remove",l.classList.add("remove-todo"),r.classList.add("todo-options-container","hidden"),r.append(l),i.append(r),e.append(n,c,s,d,a,i),this.addTodosToProjectContainers(o.projectName,e)}}addTodosToProjectContainers(e,t){const o=document.querySelectorAll(".project-container");for(const n of o)e===n.getAttribute("data-project-name")&&n.append(t)}},s=[],d=document.querySelector(".todos-container"),a=document.querySelector(".new-todo-container"),i=document.querySelector(".add-todo-button"),r=document.querySelector(".submit-todo-button"),l=document.querySelector(".projects"),m=document.querySelector("#project-selection"),u=document.querySelector(".home");function p(){const e=document.querySelector(".project-name-container"),t=document.querySelector("#project-name");"New Project"===m.value?(e.classList.contains("hidden")&&e.classList.remove("hidden"),t.value=""):e.classList.contains("hidden")||e.classList.add("hidden")}function L(){const e=document.querySelectorAll(".remove-todo");for(const t of e)t.addEventListener("click",(e=>{const t=+e.target.parentNode.parentNode.parentNode.getAttribute("data-todo-index");s.splice(t,1),u.classList.contains("button-selected")?(o.mainContent.loadTodos(s),h(),v(s),L()):(document.querySelector(".todos-container").innerHTML="",y())}))}function y(){const e=s.filter((e=>"None"!==e.projectName));c.loadProjectContainers(),c.loadTodosForProject(e),v(e),h(),L();const t=document.querySelectorAll(".project-container");for(const e of t)1===e.childElementCount&&e.remove()}function v(e){const t=document.querySelectorAll(".complete-button");for(const o of t)o.addEventListener("click",(t=>{o.classList.contains("completed")?(o.classList.remove("completed"),o.textContent="Not Completed",t.target.parentNode.classList.remove("completed"),e[t.target.parentNode.getAttribute("data-todo-index")].complete=!1):(o.classList.add("completed"),t.target.parentNode.classList.add("completed"),o.textContent="Completed",e[t.target.parentNode.getAttribute("data-todo-index")].complete=!0)}))}function h(){const e=document.querySelectorAll(".todo-options-icon");for(const t of e)t.addEventListener("click",(e=>{const t=e.target.parentNode.querySelector(".todo-options-container");t.classList.contains("hidden")?t.classList.remove("hidden"):t.classList.add("hidden")}))}i.addEventListener("click",(e=>{a.classList.contains("hidden")&&(n.openModal(e),n.clearModalContent(),o.dimBackground(),m.value="none",p())})),window.addEventListener("click",(e=>{n.closeModal(e)&&o.unDimBackground()})),u.addEventListener("click",(()=>{o.mainContent.loadTodos(s),l.classList.remove("button-selected"),u.classList.add("button-selected"),h(),v(s),L(),null!==document.querySelector(".project-title")&&document.querySelector(".project-title").remove()})),l.addEventListener("click",(()=>{d.innerHTML="",u.classList.remove("button-selected"),l.classList.add("button-selected"),c.loadTitle(),y()})),m.addEventListener("change",(()=>{p()})),r.addEventListener("click",(e=>{if(document.querySelector("form").checkValidity()){e.preventDefault();const d=document.querySelector("#todoname").value,a=document.querySelector("#tododescription").value,i=document.querySelector("#tododate").value,r=document.querySelector("#todotime").value;let l=document.querySelector("#project-name").value;""===l&&(l="None");const m=new t(d,a,i,r,!1,l);s.push(m),c.projectsList.includes(l)||"None"===l||c.projectsList.push(l),console.log(s),n.closeModal(e),o.dimBackground(),u.classList.contains("button-selected")?(o.mainContent.loadTodos(s),h(),v(s),L()):(document.querySelector(".todos-container").innerHTML="",y())}else document.querySelector("form").reportValidity(),e.stopPropagation()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,