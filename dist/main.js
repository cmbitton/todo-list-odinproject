(()=>{"use strict";class e{content=document.querySelector("#content");mainContentContainer=document.querySelector(".main-content-container");todoscontainer=document.querySelector(".todos-container");constructor(){}loadTodos(e){let t=0;this.todoscontainer.innerHTML="";for(const n of e){const e=document.createElement("div");e.classList.add("todo-container"),e.setAttribute("data-todo-index",t),!0===n.complete&&e.classList.add("completed"),t++;const c=document.createElement("h2");c.classList.add("todo-title"),c.textContent=n.title;const s=document.createElement("p");s.classList.add("todo-description"),s.textContent=n.description;const d=document.createElement("p");d.classList.add("todo-date"),d.innerHTML=`<span class="due-date-label">Due Date: </span> ${n.dueDate.slice(5,7)}/${n.dueDate.slice(8,11)}/${n.dueDate.slice(0,4)}`;const a=document.createElement("p");a.classList.add("todo-time"),""!==n.time?a.innerHTML='<span class="due-time-label">Time Due: </span>'+(0==+(o=n.time).slice(0,2)?`${+o.slice(0,2)+12}:${o.slice(3,5)} AM`:+o.slice(0,2)<12?o+" AM":12==+o.slice(0,2)?`${o.slice(0,2)}:${o.slice(3,5)} PM`:`${+o.slice(0,2)-12}:${o.slice(3,5)} PM`):a.innerHTML='<span class="due-time-label">Time Due: </span> No Time Set';const i=document.createElement("p");i.classList.add("todo-project-name"),i.innerHTML=`<span class="due-date-label">Project Name: </span> ${n.projectName}`;const l=document.createElement("button");l.setAttribute("type","button"),l.classList.add("complete-button"),!0===n.complete&&l.classList.add("completed"),!1===n.complete?l.textContent="Not Completed":l.textContent="Completed";const r=document.createElement("div");r.classList.add("todo-options"),r.innerHTML='<span class="material-symbols-outlined todo-options-icon">more_vert</span>';const u=document.createElement("div"),m=document.createElement("div");m.textContent="Remove",m.classList.add("remove-todo"),u.classList.add("todo-options-container","hidden"),u.append(m),r.append(u),e.append(c,s,d,a,i,l,r),this.todoscontainer.append(e)}var o}addCompletionButtonEvent(e){const t=document.querySelectorAll(".complete-button");for(const o of t)o.addEventListener("click",(t=>{o.classList.contains("completed")?(o.classList.remove("completed"),o.textContent="Not Completed",t.target.parentNode.classList.remove("completed"),e[t.target.parentNode.getAttribute("data-todo-index")].complete=!1):(o.classList.add("completed"),t.target.parentNode.classList.add("completed"),o.textContent="Completed",e[t.target.parentNode.getAttribute("data-todo-index")].complete=!0)}))}showTodoOptions(){const e=document.querySelectorAll(".todo-options-icon");for(const t of e)t.addEventListener("click",(e=>{const t=e.target.parentNode;console.log(t);const o=t.querySelector(".todo-options-container");o.classList.contains("hidden")?o.classList.remove("hidden"):o.classList.add("hidden")}))}}class t{content=document.querySelector("#content");todoscontainer=document.querySelector(".todos-container");projectTitle=document.createElement("h1");constructor(){this.loadTitle(),this.projects=[]}loadTitle(){this.projectTitle.textContent="Projects",this.todoscontainer.append(this.projectTitle)}}class o{constructor(e,t,o,n,c,s){this.title=e,this.description=t,this.dueDate=o,this.time=n,this.complete=c,this.projectName=s}}const n=new class{content=document.querySelector("#content");nav=document.querySelector(".navbar");constructor(){this.mainContent=new e}dimBackground(){this.nav.style.filter="brightness(50%)",this.mainContent.mainContentContainer.style.filter="brightness(50%)"}unDimBackground(){this.nav.removeAttribute("style"),this.mainContent.mainContentContainer.removeAttribute("style")}},c=new class{content=document.querySelector("#content");modalContainer=document.querySelector(".new-todo-container");constructor(){}toggleModalVisibility(){this.modalContainer.classList.toggle("hidden")}openModal(e){e.stopPropagation(),this.toggleModalVisibility()}closeModal(e){let t=e.target,o=!0;if(!e.target.classList.contains("submit-todo-button"))for(;t&&"BODY"!==t.nodeName;){if(t.classList.contains("new-todo-container")){o=!1;break}t=t.parentNode}return o&&!this.modalContainer.classList.contains("hidden")&&this.modalContainer.classList.toggle("hidden"),o}loadModalContent(){const e=document.querySelector("#tododate"),t=function(){const e=new Date,t=e.getFullYear(),o=e.getDate();let n=e.getMonth()+1;return n.toString.length<2&&(n="0"+n),{year:t,month:n,day:o}}();e.setAttribute({min:`${t.year}-${t.month}-${t.day}`,required:!0})}clearModalContent(){document.querySelector("#todoname").value="",document.querySelector("#tododescription").value="",document.querySelector("#tododate").value="",document.querySelector("#todotime").value="",document.querySelector("#project-name").value=""}},s=[],d=document.querySelector(".todos-container"),a=document.querySelector(".new-todo-container"),i=document.querySelector(".add-todo-button"),l=document.querySelector(".submit-todo-button"),r=document.querySelector(".projects"),u=document.querySelector("#project-selection"),m=document.querySelector(".home");function p(){const e=document.querySelector(".project-name-container"),t=document.querySelector("#project-name");"New Project"===u.value?(e.classList.contains("hidden")&&e.classList.remove("hidden"),t.value=""):e.classList.contains("hidden")||e.classList.add("hidden")}function L(){const e=document.querySelectorAll(".remove-todo");for(const t of e)t.addEventListener("click",(e=>{const t=+e.target.parentNode.parentNode.parentNode.getAttribute("data-todo-index");s.splice(t,1),n.mainContent.loadTodos(s),h(),y(s),L()}))}function y(e){const t=document.querySelectorAll(".complete-button");for(const o of t)o.addEventListener("click",(t=>{o.classList.contains("completed")?(o.classList.remove("completed"),o.textContent="Not Completed",t.target.parentNode.classList.remove("completed"),e[t.target.parentNode.getAttribute("data-todo-index")].complete=!1):(o.classList.add("completed"),t.target.parentNode.classList.add("completed"),o.textContent="Completed",e[t.target.parentNode.getAttribute("data-todo-index")].complete=!0)}))}function h(){const e=document.querySelectorAll(".todo-options-icon");for(const t of e)t.addEventListener("click",(e=>{const t=e.target.parentNode.querySelector(".todo-options-container");t.classList.contains("hidden")?t.classList.remove("hidden"):t.classList.add("hidden")}))}i.addEventListener("click",(e=>{a.classList.contains("hidden")&&(c.openModal(e),c.clearModalContent(),n.dimBackground(),u.value="none",p())})),window.addEventListener("click",(e=>{c.closeModal(e)&&n.unDimBackground()})),m.addEventListener("click",(()=>{n.mainContent.loadTodos(s),r.classList.remove("button-selected"),m.classList.add("button-selected"),h(),y(s),L()})),r.addEventListener("click",(()=>{d.innerHTML="",m.classList.remove("button-selected"),r.classList.add("button-selected"),new t;const e=s.filter((e=>"None"!==e.projectName));n.mainContent.loadTodos(e)})),u.addEventListener("change",(()=>{p()})),l.addEventListener("click",(e=>{if(document.querySelector("form").checkValidity()){e.preventDefault();const t=document.querySelector("#todoname").value,d=document.querySelector("#tododescription").value,a=document.querySelector("#tododate").value,i=document.querySelector("#todotime").value;let l=document.querySelector("#project-name").value;""===l&&(l="None");const r=new o(t,d,a,i,!1,l);if(s.push(r),console.log(s),c.closeModal(e),n.dimBackground(),m.classList.contains("button-selected"))n.mainContent.loadTodos(s),y(s);else{const e=s.filter((e=>"None"!==e.projectName));n.mainContent.loadTodos(e),y(e)}h(),L()}else document.querySelector("form").reportValidity(),e.stopPropagation()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,